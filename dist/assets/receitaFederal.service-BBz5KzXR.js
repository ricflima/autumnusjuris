var m=Object.defineProperty;var h=(d,t,a)=>t in d?m(d,t,{enumerable:!0,configurable:!0,writable:!0,value:a}):d[t]=a;var u=(d,t,a)=>h(d,typeof t!="symbol"?t+"":t,a);import{R as p,l}from"./realTribunalClient.service-sDIS5wr5.js";import"./index-CAHzsjId.js";class C{constructor(){u(this,"client");this.client=new p({baseURL:"https://cav.receita.fazenda.gov.br",timeout:6e4,rateLimitDelay:5e3,retryAttempts:3,userAgent:"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36",enableCookies:!0})}async consultarProcesso(t,a){try{const s=await this.client.makeRequest({method:"GET",url:"/aplicacoes/atidc/sicav/ConsultaPublicaProcessos/paginas/ConsultaPublica.aspx"}),e=l(s.data),c=e('input[name="__VIEWSTATE"]').val()||"",r=e('input[name="__VIEWSTATEGENERATOR"]').val()||"",o=e('input[name="__EVENTVALIDATION"]').val()||"",n=new URLSearchParams({__EVENTTARGET:"",__EVENTARGUMENT:"",__VIEWSTATE:c,__VIEWSTATEGENERATOR:r,__EVENTVALIDATION:o,ctl00$cphConteudo$txtNumeroProcesso:t,ctl00$cphConteudo$txtCpfCnpj:a,ctl00$cphConteudo$btnConsultar:"Consultar"}),i=await this.client.makeRequest({method:"POST",url:"/aplicacoes/atidc/sicav/ConsultaPublicaProcessos/paginas/ConsultaPublica.aspx",data:n,headers:{"Content-Type":"application/x-www-form-urlencoded",Referer:"https://cav.receita.fazenda.gov.br/aplicacoes/atidc/sicav/ConsultaPublicaProcessos/paginas/ConsultaPublica.aspx"}});return this.parseProcessCAV(i.data,t)}catch(s){throw new Error(`Erro na consulta Receita Federal: ${s instanceof Error?s.message:"Erro desconhecido"}`)}}async consultarCARP(t){try{const a=await this.client.makeRequest({method:"GET",url:`/aplicacoes/atidc/carf/consulta/consultaPublica.aspx?numProc=${t}`});return this.parseProcessCARP(a.data,t)}catch(a){throw new Error(`Erro na consulta CARF: ${a instanceof Error?a.message:"Erro desconhecido"}`)}}parseProcessCAV(t,a){const s=l(t);if(s(".erro, .mensagem-erro").length>0||s('span:contains("Não foram encontrados")').length>0)throw new Error("Processo não encontrado na Receita Federal");const e={numero:a,classe:"Processo Administrativo Fiscal",assunto:"",dataAjuizamento:"",situacao:"Em andamento",localizacao:"Receita Federal do Brasil",orgaoJulgador:"Receita Federal",partes:[],advogados:[],movimentacoes:[],audiencias:[],documentos:[],recursos:[]};return s("table.dados-processo tr, .info-processo tr").each((c,r)=>{const o=s(r),n=o.find("td:first-child, th:first-child").text().trim(),i=o.find("td:last-child").text().trim();switch(n.toLowerCase()){case"situação":case"status":e.situacao=i;break;case"assunto":case"matéria":e.assunto=i;break;case"data de abertura":case"data autuação":e.dataAjuizamento=this.parseDate(i);break;case"órgão":case"unidade":e.orgaoJulgador=i,e.localizacao=i;break;case"interessado":case"contribuinte":e.partes.push({nome:i,tipo:"autor",documento:this.extractDocumento(i)});break}}),e.movimentacoes=this.extractMovimentacoesCAV(s),e}parseProcessCARP(t,a){const s=l(t),e={numero:a,classe:"Recurso Administrativo",assunto:"",dataAjuizamento:"",situacao:"Em andamento",localizacao:"CARF",orgaoJulgador:"Conselho Administrativo de Recursos Fiscais",partes:[],advogados:[],movimentacoes:[],audiencias:[],documentos:[],recursos:[]};return s(".dados-processo, .info-recurso").find("tr").each((c,r)=>{const o=s(r),n=o.find("td:first-child").text().trim(),i=o.find("td:last-child").text().trim();n.toLowerCase().includes("situação")?e.situacao=i:n.toLowerCase().includes("assunto")?e.assunto=i:n.toLowerCase().includes("data")&&(e.dataAjuizamento=this.parseDate(i))}),e.movimentacoes=this.extractMovimentacoesCARP(s),e}extractMovimentacoesCAV(t){const a=[];return t(".movimentacoes table tr, .historico table tr").each((s,e)=>{const r=t(e).find("td");if(r.length>=3){const o=r.eq(0).text().trim(),n=r.eq(1).text().trim(),i=r.eq(2).text().trim();o&&n&&this.isValidDate(o)&&a.push({id:`rf-mov-${s}`,data:this.parseDate(o),titulo:this.extractTitulo(n),descricao:`${n} - Responsável: ${i}`,oficial:!0})}}),a.sort((s,e)=>new Date(e.data).getTime()-new Date(s.data).getTime())}extractMovimentacoesCARP(t){const a=[];return t(".timeline-carf .evento, .movimentacoes-carf tr").each((s,e)=>{const c=t(e),r=c.find(".data-evento, td:first-child").text().trim(),o=c.find(".descricao-evento, td:nth-child(2)").text().trim();r&&o&&this.isValidDate(r)&&a.push({id:`carf-mov-${s}`,data:this.parseDate(r),titulo:this.extractTitulo(o),descricao:o,oficial:!0})}),a}async consultarDividaAtiva(t){try{const a=await this.client.makeRequest({method:"GET",url:`/aplicacoes/atidc/certidao/CndConjuntaInter/paginas/ConsultaSituacao.aspx?CPF=${t}`}),s=l(a.data),e=[];return s(".debito-ativo").each((c,r)=>{const o=s(r);e.push({numeroInscricao:o.find(".numero-inscricao").text().trim(),valor:this.parseValor(o.find(".valor-debito").text().trim()),situacao:o.find(".situacao-debito").text().trim(),dataInscricao:this.parseDate(o.find(".data-inscricao").text().trim())})}),e}catch(a){throw new Error(`Erro na consulta de dívida ativa: ${a instanceof Error?a.message:"Erro desconhecido"}`)}}async consultarCertidoes(t){try{const a=this.generateConsultaHash(t),s=await this.client.makeRequest({method:"POST",url:"/aplicacoes/atidc/certidao/CndConjuntaInter/paginas/InformaNICertidao.aspx",data:new URLSearchParams({ni:t,hash:a})}),e=l(s.data);return{situacao:e(".situacao-certidao").text().trim(),validadeAte:this.parseDate(e(".validade-certidao").text().trim()),observacoes:e(".obs-certidao").text().trim()}}catch(a){throw new Error(`Erro na consulta de certidões: ${a instanceof Error?a.message:"Erro desconhecido"}`)}}parseDate(t){if(!t)return"";const a=t.match(/(\d{1,2})\/(\d{1,2})\/(\d{4})/);if(a){const[,s,e,c]=a;return`${c}-${e.padStart(2,"0")}-${s.padStart(2,"0")}`}return""}parseValor(t){return t&&parseFloat(t.replace(/[^\d,]/g,"").replace(",","."))||0}isValidDate(t){return!!t.match(/\d{1,2}\/\d{1,2}\/\d{4}/)}extractTitulo(t){let s=t.split(`
`)[0].trim();return s.length>100&&(s=s.substring(0,100)+"..."),s||"Movimentação administrativa"}extractDocumento(t){const a=t.match(/\d{3}\.?\d{3}\.?\d{3}-?\d{2}/);if(a)return a[0];const s=t.match(/\d{2}\.?\d{3}\.?\d{3}\/?\d{4}-?\d{2}/);if(s)return s[0]}generateConsultaHash(t){const a=Date.now().toString(),s=t+a;let e=0;for(let c=0;c<s.length;c++){const r=s.charCodeAt(c);e=(e<<5)-e+r,e=e&e}return Math.abs(e).toString(16).substring(0,16)}async verificarDisponibilidade(){try{return(await this.client.makeRequest({method:"GET",url:"/",timeout:1e4})).status===200}catch{return!1}}async cleanup(){await this.client.cleanup()}}export{C as ReceitaFederalService};
