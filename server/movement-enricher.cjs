// Sistema de enriquecimento de movimenta√ß√µes com detalhes processuais
class MovementEnricher {
  constructor() {
    // Dicion√°rio TPU com explica√ß√µes detalhadas
    this.tpuExplanations = {
      // Distribui√ß√£o e Autua√ß√£o
      '26': {
        name: 'Distribui√ß√£o',
        category: 'Distribui√ß√£o e Autua√ß√£o',
        explanation: 'O processo foi distribu√≠do por sorteio ou crit√©rio espec√≠fico para uma vara/gabinete.',
        importance: 'medium',
        nextSteps: 'Aguardar an√°lise inicial pelo magistrado e poss√≠vel despacho.',
        legalImplications: 'Define compet√™ncia e in√≠cio do prazo para contesta√ß√£o/resposta.'
      },
      '11': {
        name: 'Recebimento dos Autos',
        category: 'Distribui√ß√£o e Autua√ß√£o',
        explanation: 'Os autos f√≠sicos ou digitais foram recebidos pela vara/gabinete.',
        importance: 'low',
        nextSteps: 'Processo seguir√° para an√°lise inicial.',
        legalImplications: 'In√≠cio formal da tramita√ß√£o no √≥rg√£o jurisdicional.'
      },

      // Decis√µes e Despachos
      '51': {
        name: 'Conclus√£o',
        category: 'Decis√µes e Despachos',
        explanation: 'Os autos foram conclusos ao magistrado para an√°lise e decis√£o sobre determinada quest√£o.',
        importance: 'high',
        nextSteps: 'Aguardar decis√£o judicial que pode ser: despacho, decis√£o interlocut√≥ria ou senten√ßa.',
        legalImplications: 'Momento cr√≠tico - decis√£o judicial iminente que pode afetar o rumo do processo.'
      },
      '3': {
        name: 'Decis√£o',
        category: 'Decis√µes e Despachos',
        explanation: 'Foi proferida decis√£o judicial pelo magistrado sobre quest√£o processual espec√≠fica.',
        importance: 'urgent',
        nextSteps: 'Verificar teor da decis√£o e avaliar necessidade de recurso ou cumprimento.',
        legalImplications: 'Decis√£o com for√ßa judicial - pode gerar prazos recursais ou obriga√ß√µes.'
      },
      '4': {
        name: 'Senten√ßa',
        category: 'Decis√µes e Despachos',
        explanation: 'Senten√ßa de m√©rito proferida pelo juiz, decidindo o pedido principal da a√ß√£o.',
        importance: 'urgent',
        nextSteps: 'CR√çTICO: Verificar se procedente/improcedente e prazo recursal (15 dias).',
        legalImplications: 'Resolu√ß√£o do m√©rito - in√≠cio do prazo para apela√ß√£o (15 dias √∫teis).'
      },

      // Intima√ß√µes e Cita√ß√µes
      '90': {
        name: 'Intima√ß√£o',
        category: 'Intima√ß√µes e Cita√ß√µes',
        explanation: 'Comunica√ß√£o oficial para ci√™ncia de ato processual ou cumprimento de determina√ß√£o.',
        importance: 'high',
        nextSteps: 'Verificar conte√∫do da intima√ß√£o e prazos para manifesta√ß√£o.',
        legalImplications: 'Pode gerar prazos processuais - n√£o cumprimento pode causar preclus√£o.'
      },
      '20': {
        name: 'Cita√ß√£o',
        category: 'Intima√ß√µes e Cita√ß√µes',
        explanation: 'Ato pelo qual se d√° ci√™ncia ao r√©u da exist√™ncia do processo, chamando-o para integrar a rela√ß√£o processual.',
        importance: 'urgent',
        nextSteps: 'R√©u deve apresentar contesta√ß√£o no prazo legal (15 dias √∫teis).',
        legalImplications: 'Marco inicial para defesa - n√£o contesta√ß√£o pode gerar revelia.'
      },

      // Recursos
      '62': {
        name: 'Recurso',
        category: 'Recursos',
        explanation: 'Foi interposto recurso contra decis√£o proferida nos autos.',
        importance: 'high',
        nextSteps: 'Aguardar an√°lise da admissibilidade e poss√≠vel contra-raz√µes.',
        legalImplications: 'Suspende efeitos da decis√£o recorrida at√© julgamento do recurso.'
      },

      // Audi√™ncias
      '25': {
        name: 'Audi√™ncia',
        category: 'Audi√™ncias',
        explanation: 'Designa√ß√£o ou realiza√ß√£o de audi√™ncia para instru√ß√£o, concilia√ß√£o ou outros atos processuais.',
        importance: 'high',
        nextSteps: 'Comparecer √† audi√™ncia na data/hora designada ou verificar resultado.',
        legalImplications: 'N√£o comparecimento pode gerar confiss√£o ficta ou arquivamento.'
      },

      // Publica√ß√µes
      '92': {
        name: 'Publica√ß√£o',
        category: 'Publica√ß√µes',
        explanation: 'Ato processual foi publicado no Di√°rio Oficial ou meio eletr√¥nico oficial.',
        importance: 'medium',
        nextSteps: 'Tomar ci√™ncia do ato publicado e verificar se gera prazos.',
        legalImplications: 'Marco inicial para contagem de prazos processuais.'
      },

      // Expedi√ß√£o de Documentos
      '60': {
        name: 'Expedi√ß√£o de Documento',
        category: 'Expedi√ß√£o de Documentos',
        explanation: 'Foi expedido documento oficial como certid√£o, mandado, of√≠cio ou carta.',
        importance: 'medium',
        nextSteps: 'Aguardar entrega/cumprimento do documento ou retirar se necess√°rio.',
        legalImplications: 'Documento tem for√ßa oficial e pode gerar obriga√ß√µes.'
      },

      // Juntada de Documentos
      '581': {
        name: 'Juntada de Documento',
        category: 'Juntada de Documentos',
        explanation: 'Documento foi juntado aos autos do processo.',
        importance: 'medium',
        nextSteps: 'Verificar natureza do documento juntado e poss√≠veis manifesta√ß√µes.',
        legalImplications: 'Documento integra os autos e pode afetar o julgamento.'
      },

      // Remessas
      '123': {
        name: 'Remessa',
        category: 'Remessas',
        explanation: 'Os autos foram remetidos para outro √≥rg√£o, inst√¢ncia ou setor.',
        importance: 'medium',
        nextSteps: 'Acompanhar tramita√ß√£o no √≥rg√£o de destino.',
        legalImplications: 'Mudan√ßa de compet√™ncia ou encaminhamento para cumprimento.'
      },

      // Per√≠cias
      '12306': {
        name: 'Nomea√ß√£o de Perito',
        category: 'Per√≠cias e Dilig√™ncias',
        explanation: 'Foi nomeado perito oficial para realizar exame t√©cnico no processo.',
        importance: 'high',
        nextSteps: 'Acompanhar prazo para apresenta√ß√£o do laudo pericial.',
        legalImplications: 'Prova t√©cnica que pode ser decisiva para o julgamento do m√©rito.'
      }
    };

    // Categorias com cores e √≠cones
    this.categoryInfo = {
      'Distribui√ß√£o e Autua√ß√£o': { color: 'blue', icon: 'üìã', priority: 'low' },
      'Decis√µes e Despachos': { color: 'red', icon: '‚öñÔ∏è', priority: 'urgent' },
      'Intima√ß√µes e Cita√ß√µes': { color: 'orange', icon: 'üì¨', priority: 'high' },
      'Recursos': { color: 'purple', icon: 'üìà', priority: 'high' },
      'Audi√™ncias': { color: 'green', icon: 'üë•', priority: 'high' },
      'Publica√ß√µes': { color: 'gray', icon: 'üì∞', priority: 'medium' },
      'Expedi√ß√£o de Documentos': { color: 'yellow', icon: 'üìÑ', priority: 'medium' },
      'Juntada de Documentos': { color: 'cyan', icon: 'üìé', priority: 'medium' },
      'Remessas': { color: 'indigo', icon: 'üì§', priority: 'medium' },
      'Per√≠cias e Dilig√™ncias': { color: 'pink', icon: 'üî¨', priority: 'high' }
    };
  }

  // Enriquecer movimenta√ß√£o com detalhes
  enrichMovement(movement) {
    const code = movement.movementCode || movement.metadata?.codigoTPU?.toString();
    const enrichment = this.tpuExplanations[code];
    
    if (!enrichment) {
      return {
        ...movement,
        enriched: {
          category: 'Outros',
          explanation: 'Movimenta√ß√£o processual registrada no sistema.',
          importance: 'medium',
          nextSteps: 'Verificar detalhes da movimenta√ß√£o no sistema do tribunal.',
          legalImplications: 'Consulte o andamento completo no tribunal de origem.',
          categoryInfo: { color: 'gray', icon: 'üìÑ', priority: 'medium' }
        }
      };
    }

    const categoryInfo = this.categoryInfo[enrichment.category] || this.categoryInfo['Outros'];

    return {
      ...movement,
      enriched: {
        ...enrichment,
        categoryInfo,
        detailedDescription: this.buildDetailedDescription(movement, enrichment),
        actionRequired: this.determineActionRequired(movement, enrichment),
        timeline: this.buildTimeline(movement, enrichment)
      }
    };
  }

  // Construir descri√ß√£o detalhada
  buildDetailedDescription(movement, enrichment) {
    let detailed = enrichment.explanation;

    // Adicionar informa√ß√µes espec√≠ficas dos complementos
    if (movement.metadata?.complementosTabelados) {
      const complementos = movement.metadata.complementosTabelados
        .map(comp => {
          const desc = comp.descricao || 'Complemento';
          const valor = comp.nome || comp.valor || 'N/A';
          return `${desc}: ${valor}`;
        })
        .join('; ');
      
      detailed += `\n\nüìã Detalhes espec√≠ficos: ${complementos}`;
    }

    // Adicionar contexto temporal
    const movDate = new Date(movement.movementDate);
    const daysDiff = Math.floor((Date.now() - movDate.getTime()) / (1000 * 60 * 60 * 24));
    
    if (daysDiff === 0) {
      detailed += '\n\n‚è∞ Esta movimenta√ß√£o aconteceu hoje.';
    } else if (daysDiff === 1) {
      detailed += '\n\n‚è∞ Esta movimenta√ß√£o aconteceu ontem.';
    } else if (daysDiff <= 7) {
      detailed += `\n\n‚è∞ Esta movimenta√ß√£o aconteceu h√° ${daysDiff} dias.`;
    } else if (daysDiff <= 30) {
      detailed += `\n\n‚è∞ Esta movimenta√ß√£o aconteceu h√° ${Math.floor(daysDiff/7)} semana(s).`;
    } else {
      detailed += `\n\n‚è∞ Esta movimenta√ß√£o aconteceu h√° ${Math.floor(daysDiff/30)} m√™s(es).`;
    }

    return detailed;
  }

  // Determinar a√ß√£o requerida
  determineActionRequired(movement, enrichment) {
    const urgentCodes = ['3', '4', '20', '90', '25']; // Decis√£o, Senten√ßa, Cita√ß√£o, Intima√ß√£o, Audi√™ncia
    const code = movement.movementCode || movement.metadata?.codigoTPU?.toString();
    
    if (urgentCodes.includes(code)) {
      return {
        required: true,
        urgency: enrichment.importance,
        deadline: this.calculateDeadline(movement, enrichment),
        action: enrichment.nextSteps
      };
    }

    return {
      required: false,
      urgency: 'low',
      action: 'Acompanhar andamento do processo.'
    };
  }

  // Calcular prazo estimado
  calculateDeadline(movement, enrichment) {
    const code = movement.movementCode || movement.metadata?.codigoTPU?.toString();
    const movDate = new Date(movement.movementDate);
    
    switch (code) {
      case '3': // Decis√£o
      case '4': // Senten√ßa
        const appealDeadline = new Date(movDate);
        appealDeadline.setDate(appealDeadline.getDate() + 15); // 15 dias √∫teis
        return {
          date: appealDeadline,
          description: 'Prazo para recurso (15 dias √∫teis)',
          type: 'appeal'
        };
      
      case '20': // Cita√ß√£o
        const defenseDeadline = new Date(movDate);
        defenseDeadline.setDate(defenseDeadline.getDate() + 15); // 15 dias √∫teis
        return {
          date: defenseDeadline,
          description: 'Prazo para contesta√ß√£o (15 dias √∫teis)',
          type: 'defense'
        };
      
      case '90': // Intima√ß√£o
        const responseDeadline = new Date(movDate);
        responseDeadline.setDate(responseDeadline.getDate() + 15); // 15 dias √∫teis
        return {
          date: responseDeadline,
          description: 'Prazo para manifesta√ß√£o (15 dias √∫teis)',
          type: 'response'
        };
      
      default:
        return null;
    }
  }

  // Construir timeline processual
  buildTimeline(movement, enrichment) {
    const code = movement.movementCode || movement.metadata?.codigoTPU?.toString();
    
    const timelineSteps = {
      '26': ['Distribui√ß√£o', 'An√°lise inicial', 'Cita√ß√£o/Intima√ß√£o', 'Resposta', 'Instru√ß√£o', 'Senten√ßa'],
      '20': ['Cita√ß√£o', 'Contesta√ß√£o', 'Tr√©plica', 'Saneamento', 'Instru√ß√£o', 'Senten√ßa'],
      '51': ['Conclus√£o', 'An√°lise', 'Decis√£o/Despacho', 'Publica√ß√£o', 'Cumprimento'],
      '3': ['Decis√£o', 'Publica√ß√£o', 'Prazo recursal', 'Recurso/Tr√¢nsito', 'Cumprimento'],
      '4': ['Senten√ßa', 'Publica√ß√£o', 'Prazo recursal', 'Apela√ß√£o/Tr√¢nsito', 'Execu√ß√£o']
    };

    return timelineSteps[code] || ['Movimenta√ß√£o registrada', 'An√°lise', 'Prosseguimento'];
  }

  // Enriquecer lote de movimenta√ß√µes
  enrichBatch(movements) {
    return movements.map(movement => this.enrichMovement(movement));
  }

  // Obter estat√≠sticas de movimenta√ß√µes enriquecidas
  getEnrichmentStats(enrichedMovements) {
    const stats = {
      byCategory: {},
      byImportance: {},
      actionsRequired: 0,
      urgentActions: 0,
      withDeadlines: 0
    };

    enrichedMovements.forEach(movement => {
      const category = movement.enriched.category;
      const importance = movement.enriched.importance;
      
      stats.byCategory[category] = (stats.byCategory[category] || 0) + 1;
      stats.byImportance[importance] = (stats.byImportance[importance] || 0) + 1;
      
      if (movement.enriched.actionRequired?.required) {
        stats.actionsRequired++;
        if (movement.enriched.actionRequired.urgency === 'urgent') {
          stats.urgentActions++;
        }
      }
      
      if (movement.enriched.actionRequired?.deadline) {
        stats.withDeadlines++;
      }
    });

    return stats;
  }
}

module.exports = MovementEnricher;